#docker-compose-base -> done
#docker-compose-e2e-templete.yaml -> done
# docker-image -> docker.hub

version: '2'

volumes:
  orderer.orh.in:
  peer0.nsp1.orh.in:
  peer1.nsp1.orh.in:
  peer0.nsp2.orh.in:
  peer1.nsp2.orh.in:


networks:
byfn:
  
services:
  ca_peerNsp1:
    container_name: ca_peerNsp1
    image: hyperledger/fabric-ca:x86_64-1.1.0
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-nsp1
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.nsp1.orh.in-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/CA1_PRIVATE_KEY
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.nsp1.orh.in-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/CA1_PRIVATE_KEY -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/nsp1.orh.in/ca/:/etc/hyperledger/fabric-ca-server-config
    networks:
      - byfn
  
  ca_peerNsp2:
    container_name: ca_peerNsp2    
    image: hyperledger/fabric-ca:x86_64-1.1.0
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-nsp2
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.nsp2.orh.in-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/CA2_PRIVATE_KEY
    ports:
      - "8054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.nsp2.orh.in-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/CA2_PRIVATE_KEY -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/nsp2.orh.in/ca/:/etc/hyperledger/fabric-ca-server-config
    networks:
      - byfn

  orderer.orh.in:
    container_name: orderer.orh.in
    image: hyperledger/fabric-orderer:x86_64-1.1.0
    environment:
      - ORDERER_GENERAL_LOGLEVEL=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
    - ../channel-artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
    - ../crypto-config/ordererOrganizations/example.com/orderers/orderer.orh.in/msp:/var/hyperledger/orderer/msp
    - ../crypto-config/ordererOrganizations/example.com/orderers/orderer.orh.in/tls/:/var/hyperledger/orderer/tls
    - orderer.orh.in:/var/hyperledger/production/orderer
    ports:
      - 7050:7050


  peer0.nsp1.orh.in:
    container_name: peer0.nsp1.orh.in
    environment:
      - CORE_PEER_ID=peer0.nsp1.orh.in
      - CORE_PEER_ADDRESS=peer0.nsp1.orh.in:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.nsp1.orh.in:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.nsp1.orh.in:7051
      - CORE_PEER_LOCALMSPID=nsp1MSP
    depends_on:
      - couchdb0
    volumes:
        - /var/run/:/host/var/run/
        - ../crypto-config/peerOrganizations/nsp1.orh.in/peers/peer0.nsp1.orh.in/msp:/etc/hyperledger/fabric/msp
        - ../crypto-config/peerOrganizations/nsp1.orh.in/peers/peer0.nsp1.orh.in/tls:/etc/hyperledger/fabric/tls
        - peer0.nsp1.orh.in:/var/hyperledger/production
    ports:
      - 7051:7051
      - 7053:7053

    extends:
     services:
      peer-base:
       image: hyperledger/fabric-peer:x86_64-1.1.0
       environment:
        - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
        # the following setting starts chaincode containers on the same
        # bridge network as the peers
        # https://docs.docker.com/compose/networking/
        - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_byfn
        - CORE_LOGGING_LEVEL=INFO
        #- CORE_LOGGING_LEVEL=DEBUG
        - CORE_PEER_TLS_ENABLED=true
        - CORE_PEER_GOSSIP_USELEADERELECTION=true
        - CORE_PEER_GOSSIP_ORGLEADER=false
        - CORE_PEER_PROFILE_ENABLED=true
        - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
        - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
        - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
       working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
       command: peer node start
      #file:  base/docker-compose-base.yaml
      #service: peer0.nsp1.orh.in
    networks:
      - byfn

  peer1.nsp1.orh.in:
    container_name: peer1.nsp1.orh.in
    environment:
      - CORE_PEER_ID=peer1.nsp1.orh.in
      - CORE_PEER_ADDRESS=peer1.nsp1.orh.in:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.nsp1.orh.in:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.nsp1.orh.in:7051
      - CORE_PEER_LOCALMSPID=nsp1MSP
    depends_on:
      - couchdb1
    volumes:
        - /var/run/:/host/var/run/
        - ../crypto-config/peerOrganizations/nsp1.orh.in/peers/peer1.nsp1.orh.in/msp:/etc/hyperledger/fabric/msp
        - ../crypto-config/peerOrganizations/nsp1.orh.in/peers/peer1.nsp1.orh.in/tls:/etc/hyperledger/fabric/tls
        - peer1.nsp1.orh.in:/var/hyperledger/production
    ports:
      - 8051:7051
      - 8053:7053
    extends:
      services:
      peer-base:
       image: hyperledger/fabric-peer:x86_64-1.1.0
       environment:
        - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
        # the following setting starts chaincode containers on the same
        # bridge network as the peers
        # https://docs.docker.com/compose/networking/
        - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_byfn
        - CORE_LOGGING_LEVEL=INFO
        #- CORE_LOGGING_LEVEL=DEBUG
        - CORE_PEER_TLS_ENABLED=true
        - CORE_PEER_GOSSIP_USELEADERELECTION=true
        - CORE_PEER_GOSSIP_ORGLEADER=false
        - CORE_PEER_PROFILE_ENABLED=true
        - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
        - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
        - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
       working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
       command: peer node start
      #file:  base/docker-compose-base.yaml
      #service: peer1.nsp1.orh.in
    networks:
      - byfn

  peer0.nsp2.orh.in:
    container_name: peer0.nsp2.orh.in
    environment:
      - CORE_PEER_ID=peer0.nsp2.orh.in
      - CORE_PEER_ADDRESS=peer0.nsp2.orh.in:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.nsp2.orh.in:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.nsp2.orh.in:7051
      - CORE_PEER_LOCALMSPID=nsp2MSP
    depends_on:
      - couchdb2
      
    volumes:
        - /var/run/:/host/var/run/
        - ../crypto-config/peerOrganizations/nsp2.orh.in/peers/peer0.nsp2.orh.in/msp:/etc/hyperledger/fabric/msp
        - ../crypto-config/peerOrganizations/nsp2.orh.in/peers/peer0.nsp2.orh.in/tls:/etc/hyperledger/fabric/tls
        - peer0.nsp2.orh.in:/var/hyperledger/production
    ports:
      - 9051:7051
      - 9053:7053
    extends:
      services:
      peer-base:
       image: hyperledger/fabric-peer:x86_64-1.1.0
       environment:
        - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
        # the following setting starts chaincode containers on the same
        # bridge network as the peers
        # https://docs.docker.com/compose/networking/
        - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_byfn
        - CORE_LOGGING_LEVEL=INFO
        #- CORE_LOGGING_LEVEL=DEBUG
        - CORE_PEER_TLS_ENABLED=true
        - CORE_PEER_GOSSIP_USELEADERELECTION=true
        - CORE_PEER_GOSSIP_ORGLEADER=false
        - CORE_PEER_PROFILE_ENABLED=true
        - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
        - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
        - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
       working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
       command: peer node start
      #file:  base/docker-compose-base.yaml
      #service: peer0.nsp2.orh.in
    networks:
      - byfn

  peer1.nsp2.orh.in:
    container_name: peer1.nsp2.orh.in
    environment:
      - CORE_PEER_ID=peer1.nsp2.orh.in
      - CORE_PEER_ADDRESS=peer1.nsp2.orh.in:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.nsp2.orh.in:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.nsp2.orh.in:7051
      - CORE_PEER_LOCALMSPID=Org2MSP
    depends_on:
      - couchdb3
    volumes:
        - /var/run/:/host/var/run/
        - ../crypto-config/peerOrganizations/nsp2.orh.in/peers/peer1.nsp2.orh.in/msp:/etc/hyperledger/fabric/msp
        - ../crypto-config/peerOrganizations/nsp2.orh.in/peers/peer1.nsp2.orh.in/tls:/etc/hyperledger/fabric/tls
        - peer1.nsp2.orh.in:/var/hyperledger/production
    ports:
      - 10051:7051
      - 10053:7053
    extends:
      services:
      peer-base:
       image: hyperledger/fabric-peer:x86_64-1.1.0
       environment:
        - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
        # the following setting starts chaincode containers on the same
        # bridge network as the peers
        # https://docs.docker.com/compose/networking/
        - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_byfn
        - CORE_LOGGING_LEVEL=INFO
        #- CORE_LOGGING_LEVEL=DEBUG
        - CORE_PEER_TLS_ENABLED=true
        - CORE_PEER_GOSSIP_USELEADERELECTION=true
        - CORE_PEER_GOSSIP_ORGLEADER=false
        - CORE_PEER_PROFILE_ENABLED=true
        - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
        - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
        - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
       working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
       command: peer node start
      #file:  base/docker-compose-base.yaml
      #service: peer1.nsp2.orh.in
    networks:
      - byfn


couchdb3:
    container_name: couchdb3
    image: hyperledger/fabric-couchdb:x86_64-1.1.0
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB3
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb3:5984
    ports:
      - "8984:5984"
    networks:
      - byfn

couchdb1:
    container_name: couchdb1
    image: hyperledger/fabric-couchdb:x86_64-1.1.0
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB1
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1:5984
    ports:
      - "6984:5984"
    networks:
      - byfn

couchdb0:
    container_name: couchdb0
    image: hyperledger/fabric-couchdb:x86_64-1.1.0
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB0
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0:5984
    ports:
      - "5984:5984"
    networks:
      - byfn

couchdb2:
    container_name: couchdb2
    image: hyperledger/fabric-couchdb:x86_64-1.1.0
    environment:
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB2
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb2:5984
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - "7984:5984"
    networks:
      - byfn


